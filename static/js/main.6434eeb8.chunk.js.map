{"version":3,"sources":["types/File.ts","fixtures/files.ts","images/download.svg","components/fileTable/FileTableToolbar.tsx","components/fileTable/hooks.ts","components/fileTable/FileTableHead.tsx","components/fileTable/FileTableRow.tsx","components/fileTable/FileTableBody.tsx","components/fileTable/FileTable.tsx","pages/homepage/Homepage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FileStatus","filesFixture","name","device","path","status","FileTableToolbar","files","selectedFiles","handleSelectAllFiles","useState","isSelectAllChecked","setIsSelectAllChecked","useEffect","selectAllCheckbox","document","querySelector","indeterminate","size","length","handleDownloadFiles","selectedFilesWithAvailableStatus","Array","from","filter","file","Available","alert","reduce","message","makeSelectedFilesCountCaption","useFileTableToolbar","type","className","checked","onChange","onClick","src","DownloadIcon","alt","FileTableHead","data-test","FileTableRow","isRowSelected","handleSelectFile","readOnly","FileTableBody","map","has","FileTable","setFiles","Set","setSelectedFiles","delete","add","clear","forEach","useFileTable","id","Homepage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6434eeb8.chunk.js","sourcesContent":["export enum FileStatus {\n  Available = 'available',\n  Scheduled = 'scheduled',\n}\n\nexport interface File {\n  readonly name: string;\n  readonly device: string;\n  readonly path: string;\n  readonly status: string;\n}\n","export const filesFixture = [\n  {\n    name: 'smss.exe',\n    device: 'Stark',\n    path: '\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\smss.exe',\n    status: 'scheduled',\n  },\n  {\n    name: 'netsh.exe',\n    device: 'Targaryen',\n    path: '\\\\Device\\\\HarddiskVolume2\\\\Windows\\\\System32\\\\netsh.exe',\n    status: 'available',\n  },\n\n  {\n    name: 'uxtheme.dll',\n    device: 'Lanniester',\n    path: '\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\uxtheme.dll',\n    status: 'available',\n  },\n\n  {\n    name: 'cryptbase.dll',\n    device: 'Martell',\n    path: '\\\\Device\\\\HarddiskVolume1\\\\Windows\\\\System32\\\\cryptbase.dll',\n    status: 'scheduled',\n  },\n\n  {\n    name: '7za.exe',\n    device: 'Baratheon',\n    path: '\\\\Device\\\\HarddiskVolume1\\\\temp\\\\7za.exe',\n    status: 'scheduled',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/download.b8e5c5d6.svg\";","import * as React from 'react';\n\nimport { File } from '../../types';\n\nimport { useFileTableToolbar } from './hooks';\n\nimport DownloadIcon from '../../images/download.svg';\n\nimport './styles.scss';\n\ninterface FileTableToolbarProps {\n  files: File[];\n  selectedFiles: Set<File>;\n  handleSelectAllFiles: () => void;\n}\n\nfunction FileTableToolbar({ files, selectedFiles, handleSelectAllFiles }: FileTableToolbarProps) {\n  const { isSelectAllChecked, handleDownloadFiles, makeSelectedFilesCountCaption } =\n    useFileTableToolbar(files, selectedFiles);\n\n  return (\n    <header>\n      <input\n        type=\"checkbox\"\n        className=\"select-all-checkbox\"\n        checked={isSelectAllChecked}\n        onChange={handleSelectAllFiles}\n      />\n      <span className=\"selected-files-count\">{makeSelectedFilesCountCaption()}</span>\n      <button onClick={handleDownloadFiles}>\n        <img src={DownloadIcon} alt=\"icon\" />\n        Download Selected\n      </button>\n    </header>\n  );\n}\n\nexport default FileTableToolbar;\n","import { useState, useEffect } from 'react';\n\nimport { File, FileStatus } from '../../types';\nimport { filesFixture } from '../../fixtures';\n\nexport function useFileTable() {\n  const [files, setFiles] = useState<File[]>([]);\n  const [selectedFiles, setSelectedFiles] = useState(new Set<File>());\n\n  useEffect(() => {\n    setFiles(filesFixture);\n  }, []);\n\n  const handleSelectFile = (file: File) => {\n    if (selectedFiles.has(file)) {\n      selectedFiles.delete(file);\n    } else {\n      selectedFiles.add(file);\n    }\n    setSelectedFiles(new Set<File>(selectedFiles));\n  };\n\n  const handleSelectAllFiles = () => {\n    if (selectedFiles.size === files.length) {\n      selectedFiles.clear();\n    } else {\n      files.forEach((file: File) => selectedFiles.add(file));\n    }\n    setSelectedFiles(new Set<File>(selectedFiles));\n  };\n\n  return { files, selectedFiles, handleSelectFile, handleSelectAllFiles };\n}\n\nexport function useFileTableToolbar(files: File[], selectedFiles: Set<File>) {\n  const [isSelectAllChecked, setIsSelectAllChecked] = useState(false);\n\n  useEffect(() => {\n    const selectAllCheckbox: HTMLInputElement = document.querySelector(\n      '#file-table .select-all-checkbox',\n    )!;\n    selectAllCheckbox.indeterminate = false;\n\n    if (selectedFiles.size === 0) {\n      setIsSelectAllChecked(false);\n      return;\n    }\n    if (selectedFiles.size === files.length) {\n      setIsSelectAllChecked(true);\n      return;\n    }\n\n    selectAllCheckbox.indeterminate = true;\n  }, [selectedFiles, files]);\n\n  const handleDownloadFiles = () => {\n    const selectedFilesWithAvailableStatus: File[] = Array.from(selectedFiles).filter(\n      (file: File) => file.status === FileStatus.Available,\n    );\n\n    if (selectedFilesWithAvailableStatus.length > 0) {\n      alert(\n        selectedFilesWithAvailableStatus.reduce(\n          (message: string, file: File) => `${message}- ${file.device}: ${file.path}\\n`,\n          'Available files to download:\\n\\n',\n        ),\n      );\n    } else {\n      alert('There are no selected available files to download.');\n    }\n  };\n\n  const makeSelectedFilesCountCaption = () =>\n    selectedFiles.size === 0 ? 'None Selected' : `Selected ${selectedFiles.size}`;\n\n  return { isSelectAllChecked, handleDownloadFiles, makeSelectedFilesCountCaption };\n}\n","import * as React from 'react';\n\nfunction FileTableHead() {\n  return (\n    <thead>\n      <tr>\n        <th data-test=\"file-table-checkbox\"></th>\n        <th data-test=\"file-table-name\">Name</th>\n        <th data-test=\"file-table-device\">Device</th>\n        <th data-test=\"file-table-path\">Path</th>\n        <th data-test=\"file-table-status-icon\"></th>\n        <th data-test=\"file-table-status\">Status</th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default FileTableHead;\n","import * as React from 'react';\n\nimport { File, FileStatus } from '../../types';\n\ninterface FileTableRowProps {\n  file: File;\n  isRowSelected: boolean;\n  handleSelectFile: (file: File) => void;\n}\n\nfunction FileTableRow({ file, isRowSelected, handleSelectFile }: FileTableRowProps) {\n  const handleRowClick = () => handleSelectFile(file);\n\n  return (\n    <tr\n      key={file.name}\n      className={isRowSelected ? 'file-table-row-selected' : ''}\n      data-test=\"file-table-row\"\n      onClick={handleRowClick}\n    >\n      <td>\n        <input type=\"checkbox\" checked={isRowSelected} readOnly />\n      </td>\n      <td>{file.name}</td>\n      <td>{file.device}</td>\n      <td>{file.path}</td>\n      <td>\n        {file.status === FileStatus.Available && <span className=\"file-status-available\"></span>}\n      </td>\n      <td className=\"file-table-status\">{file.status}</td>\n    </tr>\n  );\n}\n\nexport default FileTableRow;\n","import * as React from 'react';\n\nimport { File } from '../../types';\n\nimport FileTableRow from './FileTableRow';\n\ninterface FileTableBodyProps {\n  files: File[];\n  selectedFiles: Set<File>;\n  handleSelectFile: (file: File) => void;\n}\n\nfunction FileTableBody({ files = [], selectedFiles, handleSelectFile }: FileTableBodyProps) {\n  return (\n    <tbody>\n      {files.map((file: File) => (\n        <FileTableRow\n          key={file.device}\n          file={file}\n          isRowSelected={selectedFiles.has(file)}\n          handleSelectFile={handleSelectFile}\n        />\n      ))}\n    </tbody>\n  );\n}\n\nexport default FileTableBody;\n","import * as React from 'react';\n\nimport { useFileTable } from './hooks';\n\nimport FileTableToolbar from './FileTableToolbar';\nimport FileTableHead from './FileTableHead';\nimport FileTableBody from './FileTableBody';\n\nimport './styles.scss';\n\nfunction FileTable() {\n  const { files, selectedFiles, handleSelectFile, handleSelectAllFiles } = useFileTable();\n\n  return (\n    <div id=\"file-table\" data-test=\"homepage-border\">\n      <FileTableToolbar\n        files={files}\n        selectedFiles={selectedFiles}\n        handleSelectAllFiles={handleSelectAllFiles}\n      />\n      <table data-test=\"file-table\">\n        <FileTableHead />\n        <FileTableBody\n          files={files}\n          selectedFiles={selectedFiles}\n          handleSelectFile={handleSelectFile}\n        />\n      </table>\n    </div>\n  );\n}\n\nexport default FileTable;\n","import * as React from 'react';\n\nimport { FileTable } from '../../components/fileTable';\n\nimport './styles.scss';\n\nfunction Homepage() {\n  return (\n    <div className=\"homepage-border\" data-test=\"homepage-border\">\n      <h1 data-test=\"homepage-title\">File Table Demo</h1>\n      <article data-test=\"homepage-description\">\n        <p>\n          This demo application shows a table where every row is a file that can be selected and\n          downloaded (files are not actually downloaded but shown in an alert message).\n        </p>\n        <p>\n          It's a frontend demo developed with React.js, TypeScript, and SCSS. All the styles are\n          done with CSS, it doesn't include style frameworks like Material-UI.\n        </p>\n        <p>It uses functional tests with Cypress, and it's developed with TDD.</p>\n      </article>\n      <FileTable />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import * as React from 'react';\n\nimport { Homepage } from './pages/homepage';\n\nimport './styles/global.scss';\n\nfunction App() {\n  return <Homepage />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}